{{- if eq .Values.controller "statefulset" }}
apiVersion: {{ template "mcrouter.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ template "mcrouter.fullname" . }}
  labels:
    {{- include "mcrouter.labels" . | nindent 4 }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  serviceName: {{ template "mcrouter.fullname" . }}
  replicas: {{ .Values.statefulset.replicas }}
  selector:
    matchLabels:
      {{- include "mcrouter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mcrouter.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
        {{- if eq .Values.statefulset.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                {{- include "mcrouter.selectorLabels" . | nindent 16 }}
        {{- else if eq .Values.statefulset.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  {{- include "mcrouter.selectorLabels" . | nindent 18 }}
        {{- end }}
      containers:
      - name: {{ template "mcrouter.fullname" . }}
        image: {{ .Values.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy | default "IfNotPresent" | quote }}
        command: ["mcrouter"]
        args:
        - -p {{ .Values.mcrouterCommandParams.port }}
        - --config-file=/etc/mcrouter/config.json
        volumeMounts:
        - name: config
          mountPath: /etc/mcrouter
        ports:
        - name: mcrouter-port
          containerPort: {{ .Values.mcrouterCommandParams.port }}
        livenessProbe:
          tcpSocket:
            port: mcrouter-port
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: mcrouter-port
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      volumes:
      - name: config
        configMap:
          name: {{ template "mcrouter.fullname" . }}
{{- end }}
